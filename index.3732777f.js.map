{"mappings":"YAAaA,SAASC,cAAc,MAEjBD,SAASC,cAAc,cACvBD,SAASC,cAAc,cAH1C,IAIMC,EAAUF,SAASC,cAAc,iBACjCE,EAAaH,SAASC,cAAc,oBAE1C,SAASG,EAAIC,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAGnC,IAAMC,EAAQ,CACZC,WAAY,KACZC,UAAU,EAEVC,MAAA,WACE,IAAIC,KAAKF,SAAT,CAIA,IAAMG,EAAaC,KAAKC,MAExBH,KAAKF,UAAW,EAEhBE,KAAKH,WAAaO,aAAY,WAC5B,IAcqBC,EACnBC,EAGAC,EACAC,EAnBIC,EAAcP,KAAKC,MAEnBO,GAYeL,EAbHI,EAAcR,EAc9BK,EAAQd,EACZmB,KAAKC,MAAMP,EAAS,MAAyB,OAEzCE,EAAOf,EAAImB,KAAKC,MAAMP,EAAS,KAAoB,MACnDG,EAAOhB,EAAImB,KAAKC,MAAMP,EAAS,IAAc,MAE5C,CAAEC,QAAOC,OAAMC,SAjBlBlB,EAAQuB,YAAc,GAA6BC,OAA1BJ,EAAeJ,MAAM,OAA8BQ,OAAzBJ,EAAeH,KAAK,OAAyBO,OAApBJ,EAAeF,K,GAC1F,IAbD,C,EAgBJO,KAAA,WACEC,cAAchB,KAAKH,W,GAevBN,EAAW0B,iBAAiB,SAAS,SAAAC,GACnC,IAAIC,EAASD,EAAEC,QAGZA,EAAOC,UAAUC,SAAS,cAC1BF,EAAOC,UAAUC,SAAS,eAKzBF,EAAOC,UAAUC,SAAS,cAC5BzB,EAAMG,QAGJoB,EAAOC,UAAUC,SAAS,eAC5BzB,EAAME,UAAW,EACjBF,EAAMmB,Q","sources":["src/index.js"],"sourcesContent":["const myH1 = document.querySelector('h1');\n\nconst btnStartEl = document.querySelector('.btn-start');\nconst btnResetEl = document.querySelector('.btn-reset');\nconst timetEl = document.querySelector('.global-timer');\nconst navigBtnEl = document.querySelector('.global-time-nav');\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst timer = {\n  intervalId: null,\n  isActive: false,\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n\n    const startTaime = Date.now();\n\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTaime;\n      const timeComponents = getTimeComponents(deltaTime);\n\n      timetEl.textContent = `${timeComponents.hours} : ${timeComponents.mins} : ${timeComponents.secs}`;\n    }, 1000);\n  },\n\n  stop() {\n    clearInterval(this.intervalId);\n  },\n\n};\n\nfunction getTimeComponents(time) {\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  );\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  return { hours, mins, secs };\n}\n\nnavigBtnEl.addEventListener('click', e => {\n  let target = e.target;\n\n  if (\n    !target.classList.contains('btn-start') &\n    !target.classList.contains('btn-reset')\n  ) {\n    return;\n  }\n\n  if (target.classList.contains('btn-start')) {\n    timer.start();\n  }\n\n  if (target.classList.contains('btn-reset')) {\n    timer.isActive = false;\n    timer.stop();\n  }\n});\n"],"names":["document","querySelector","$b8f9b7833fa37166$var$timetEl","$b8f9b7833fa37166$var$navigBtnEl","$b8f9b7833fa37166$var$pad","value","String","padStart","$b8f9b7833fa37166$var$timer","intervalId","isActive","start","this","startTaime","Date","now","setInterval","time","hours","mins","secs","currentTime","timeComponents","Math","floor","textContent","concat","stop","clearInterval","addEventListener","e","target","classList","contains"],"version":3,"file":"index.3732777f.js.map"}